class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){const t=`${DBHelper.DATABASE_URL}`;fetch(t).then(t=>{200===t.status?t.json().then(t=>{e(null,t)}).catch(t=>{e(t,null)}):e(`Request failed. ${t.status}`,null)}).catch(t=>e(t,null))}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,s)=>{if(r)n(r,null);else{let r=s;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}function createIDB(){if(!("indexedDB"in window))return void console.log("This browser does not support IndexedDB");const e=idb.open("restaurant-reviews",1,function(e){e.objectStoreNames.contains("restaurants")||e.createObjectStore("restaurants",{keyPath:"id"})});let t;DBHelper.fetchRestaurants((e,n)=>{e?console.error("ðŸ’© we got an error",e):t=n}),e.then(function(e){var n=e.transaction("restaurants","readwrite"),r=n.objectStore("restaurants");return t.forEach(e=>{r.put(e)}),n.complete}).then(function(){console.log("Store Updated")})}"serviceWorker"in navigator&&navigator.serviceWorker.register("sw.min.js").then(function(e){console.log("ServiceWorker Registered",e),createIDB()}).catch(function(e){console.log("ServiceWorker failed to Register",e)}),window.addEventListener("beforeinstallprompt",function(e){e.userChoice.then(function(e){console.log(e.outcome),"dismissed"==e.outcome?console.log("User cancelled home screen install"):console.log("User added to home screen")})});